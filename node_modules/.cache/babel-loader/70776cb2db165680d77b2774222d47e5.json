{"ast":null,"code":"var _jsxFileName = \"/Users/aditpatel/flatironcode/react/mod4Project/stockpredictor/src/Main.js\";\nimport React from 'react';\nimport * as V from 'victory';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\nexport default class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{\n        quarter: 1,\n        earnings: 13000\n      }, {\n        quarter: 2,\n        earnings: 16500\n      }, {\n        quarter: 3,\n        earnings: 14250\n      }, {\n        quarter: 4,\n        earnings: 19000\n      }]\n    };\n\n    this.changeState = () => {\n      this.setState({\n        data: [{\n          quarter: 1,\n          earnings: 30000 * Math.random()\n        }, {\n          quarter: 2,\n          earnings: 30000 * Math.random()\n        }, {\n          quarter: 3,\n          earnings: 30000 * Math.random()\n        }, {\n          quarter: 4,\n          earnings: 30000 * Math.random()\n        }]\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Victory Tutorial\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.changeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Change\"), /*#__PURE__*/React.createElement(VictoryChart, {\n      animate: {\n        duration: 500\n      },\n      theme: VictoryTheme.material,\n      domainPadding: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n    // they are placed on the axis\n    , {\n      tickValues: [1, 2, 3, 4],\n      tickFormat: [\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      dependentAxis: true // tickFormat specifies how ticks should be displayed\n      ,\n      tickFormat: x => `$${x / 1000}k`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: this.state.data,\n      x: \"quarter\",\n      y: \"earnings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\nconst colors = [\"#252525\", \"#525252\", \"#737373\", \"#969696\", \"#bdbdbd\", \"#d9d9d9\", \"#f0f0f0\"];\nconst charcoal = \"#252525\";\nconst grey = \"#969696\"; // Typography\n\nconst sansSerif = \"'Gill Sans', 'Gill Sans MT', 'SerÂ­avek', 'Trebuchet MS', sans-serif\";\nconst letterSpacing = \"normal\";\nconst fontSize = 14; // Layout\n\nconst baseProps = {\n  width: 450,\n  height: 300,\n  padding: 50,\n  colorScale: colors\n}; // Labels\n\nconst baseLabelStyles = {\n  fontFamily: sansSerif,\n  fontSize,\n  letterSpacing,\n  padding: 10,\n  fill: charcoal,\n  stroke: \"transparent\"\n};\nconst centeredLabelStyles = assign({\n  textAnchor: \"middle\"\n}, baseLabelStyles); // Strokes\n\nconst strokeLinecap = \"round\";\nconst strokeLinejoin = \"round\"; // Put it all together...\n\nconst theme = {\n  area: assign({\n    style: {\n      data: {\n        fill: charcoal\n      },\n      labels: centeredLabelStyles\n    }\n  }, baseProps),\n  axis: assign({\n    style: {\n      axis: {\n        fill: \"transparent\",\n        stroke: charcoal,\n        strokeWidth: 1,\n        strokeLinecap,\n        strokeLinejoin\n      },\n      axisLabel: assign({}, centeredLabelStyles, {\n        padding: 25\n      }),\n      grid: {\n        fill: \"none\",\n        stroke: \"none\",\n        pointerEvents: \"painted\"\n      },\n      ticks: {\n        fill: \"transparent\",\n        size: 1,\n        stroke: \"transparent\"\n      },\n      tickLabels: baseLabelStyles\n    }\n  }, baseProps),\n  bar: assign({\n    style: {\n      data: {\n        fill: charcoal,\n        padding: 8,\n        strokeWidth: 0\n      },\n      labels: baseLabelStyles\n    }\n  }, baseProps),\n  boxplot: assign({\n    style: {\n      max: {\n        padding: 8,\n        stroke: charcoal,\n        strokeWidth: 1\n      },\n      maxLabels: baseLabelStyles,\n      median: {\n        padding: 8,\n        stroke: charcoal,\n        strokeWidth: 1\n      },\n      medianLabels: baseLabelStyles,\n      min: {\n        padding: 8,\n        stroke: charcoal,\n        strokeWidth: 1\n      },\n      minLabels: baseLabelStyles,\n      q1: {\n        padding: 8,\n        fill: grey\n      },\n      q1Labels: baseLabelStyles,\n      q3: {\n        padding: 8,\n        fill: grey\n      },\n      q3Labels: baseLabelStyles\n    },\n    boxWidth: 20\n  }, baseProps),\n  candlestick: assign({\n    style: {\n      data: {\n        stroke: charcoal,\n        strokeWidth: 1\n      },\n      labels: centeredLabelStyles\n    },\n    candleColors: {\n      positive: \"#ffffff\",\n      negative: charcoal\n    }\n  }, baseProps),\n  chart: baseProps,\n  errorbar: assign({\n    borderWidth: 8,\n    style: {\n      data: {\n        fill: \"transparent\",\n        stroke: charcoal,\n        strokeWidth: 2\n      },\n      labels: centeredLabelStyles\n    }\n  }, baseProps),\n  group: assign({\n    colorScale: colors\n  }, baseProps),\n  legend: {\n    colorScale: colors,\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: baseLabelStyles,\n      title: assign({}, baseLabelStyles, {\n        padding: 5\n      })\n    }\n  },\n  line: assign({\n    style: {\n      data: {\n        fill: \"transparent\",\n        stroke: charcoal,\n        strokeWidth: 2\n      },\n      labels: centeredLabelStyles\n    }\n  }, baseProps),\n  pie: {\n    style: {\n      data: {\n        padding: 10,\n        stroke: \"transparent\",\n        strokeWidth: 1\n      },\n      labels: assign({}, baseLabelStyles, {\n        padding: 20\n      })\n    },\n    colorScale: colors,\n    width: 400,\n    height: 400,\n    padding: 50\n  },\n  scatter: assign({\n    style: {\n      data: {\n        fill: charcoal,\n        stroke: \"transparent\",\n        strokeWidth: 0\n      },\n      labels: centeredLabelStyles\n    }\n  }, baseProps),\n  stack: assign({\n    colorScale: colors\n  }, baseProps),\n  tooltip: {\n    style: assign({}, centeredLabelStyles, {\n      padding: 5,\n      pointerEvents: \"none\"\n    }),\n    flyoutStyle: {\n      stroke: charcoal,\n      strokeWidth: 1,\n      fill: \"#f0f0f0\",\n      pointerEvents: \"none\"\n    },\n    cornerRadius: 5,\n    pointerLength: 10\n  },\n  voronoi: assign({\n    style: {\n      data: {\n        fill: \"transparent\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      },\n      labels: assign({}, centeredLabelStyles, {\n        padding: 5,\n        pointerEvents: \"none\"\n      }),\n      flyout: {\n        stroke: charcoal,\n        strokeWidth: 1,\n        fill: \"#f0f0f0\",\n        pointerEvents: \"none\"\n      }\n    }\n  }, baseProps)\n};","map":{"version":3,"sources":["/Users/aditpatel/flatironcode/react/mod4Project/stockpredictor/src/Main.js"],"names":["React","V","VictoryBar","VictoryChart","VictoryAxis","VictoryTheme","Main","Component","state","data","quarter","earnings","changeState","setState","Math","random","render","duration","material","x","colors","charcoal","grey","sansSerif","letterSpacing","fontSize","baseProps","width","height","padding","colorScale","baseLabelStyles","fontFamily","fill","stroke","centeredLabelStyles","assign","textAnchor","strokeLinecap","strokeLinejoin","theme","area","style","labels","axis","strokeWidth","axisLabel","grid","pointerEvents","ticks","size","tickLabels","bar","boxplot","max","maxLabels","median","medianLabels","min","minLabels","q1","q1Labels","q3","q3Labels","boxWidth","candlestick","candleColors","positive","negative","chart","errorbar","borderWidth","group","legend","gutter","orientation","titleOrientation","type","title","line","pie","scatter","stack","tooltip","flyoutStyle","cornerRadius","pointerLength","voronoi","flyout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as V from 'victory';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme }from 'victory';\n\n\n\nexport default class Main extends React.Component {\n\n  state={\n    data: [\n      {quarter: 1, earnings: 13000},\n      {quarter: 2, earnings: 16500},\n      {quarter: 3, earnings: 14250},\n      {quarter: 4, earnings: 19000}\n    ]\n  }\n\n  changeState = () => {\n    this.setState({data: [\n      {quarter: 1, earnings: 30000*Math.random()},\n      {quarter: 2, earnings: 30000*Math.random()},\n      {quarter: 3, earnings: 30000*Math.random()},\n      {quarter: 4, earnings: 30000*Math.random()}\n    ]})\n  }\n\n  render() {\n    return (\n      <div className=\"Chart\">\n        <h1>Victory Tutorial</h1>\n        <button onClick={this.changeState}>Change</button>\n        <VictoryChart \n        animate={{ duration: 500}}\n        theme={VictoryTheme.material}\n          domainPadding= {20} >\n            <VictoryAxis\n              // tickValues specifies both the number of ticks and where\n              // they are placed on the axis\n              tickValues={[1, 2, 3, 4]}\n              tickFormat={[\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"]}\n            />\n            <VictoryAxis\n              dependentAxis\n              // tickFormat specifies how ticks should be displayed\n              tickFormat={(x) => (`$${x / 1000}k`)}\n            />\n              <VictoryBar \n                data={this.state.data} \n                x={\"quarter\"} \n                y={\"earnings\"}/>\n        </VictoryChart>\n      </div>\n    );\n  }\n}\n\nconst colors = [\n  \"#252525\",\n  \"#525252\",\n  \"#737373\",\n  \"#969696\",\n  \"#bdbdbd\",\n  \"#d9d9d9\",\n  \"#f0f0f0\"\n];\nconst charcoal = \"#252525\";\nconst grey = \"#969696\";\n\n// Typography\nconst sansSerif =\n  \"'Gill Sans', 'Gill Sans MT', 'SerÂ­avek', 'Trebuchet MS', sans-serif\";\nconst letterSpacing = \"normal\";\nconst fontSize = 14;\n\n// Layout\nconst baseProps = {\n  width: 450,\n  height: 300,\n  padding: 50,\n  colorScale: colors\n};\n\n// Labels\nconst baseLabelStyles = {\n  fontFamily: sansSerif,\n  fontSize,\n  letterSpacing,\n  padding: 10,\n  fill: charcoal,\n  stroke: \"transparent\"\n};\nconst centeredLabelStyles = assign({ textAnchor: \"middle\" }, baseLabelStyles);\n\n// Strokes\nconst strokeLinecap = \"round\";\nconst strokeLinejoin = \"round\";\n\n// Put it all together...\nconst theme = {\n  area: assign(\n    {\n      style: {\n        data: {\n          fill: charcoal\n        },\n        labels: centeredLabelStyles\n      }\n    },\n    baseProps\n  ),\n  axis: assign(\n    {\n      style: {\n        axis: {\n          fill: \"transparent\",\n          stroke: charcoal,\n          strokeWidth: 1,\n          strokeLinecap,\n          strokeLinejoin\n        },\n        axisLabel: assign({}, centeredLabelStyles, {\n          padding: 25\n        }),\n        grid: {\n          fill: \"none\",\n          stroke: \"none\",\n          pointerEvents: \"painted\"\n        },\n        ticks: {\n          fill: \"transparent\",\n          size: 1,\n          stroke: \"transparent\"\n        },\n        tickLabels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  bar: assign(\n    {\n      style: {\n        data: {\n          fill: charcoal,\n          padding: 8,\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  boxplot: assign(\n    {\n      style: {\n        max: {\n          padding: 8,\n          stroke: charcoal,\n          strokeWidth: 1\n        },\n        maxLabels: baseLabelStyles,\n        median: {\n          padding: 8,\n          stroke: charcoal,\n          strokeWidth: 1\n        },\n        medianLabels: baseLabelStyles,\n        min: {\n          padding: 8,\n          stroke: charcoal,\n          strokeWidth: 1\n        },\n        minLabels: baseLabelStyles,\n        q1: {\n          padding: 8,\n          fill: grey\n        },\n        q1Labels: baseLabelStyles,\n        q3: {\n          padding: 8,\n          fill: grey\n        },\n        q3Labels: baseLabelStyles\n      },\n      boxWidth: 20\n    },\n    baseProps\n  ),\n  candlestick: assign(\n    {\n      style: {\n        data: {\n          stroke: charcoal,\n          strokeWidth: 1\n        },\n        labels: centeredLabelStyles\n      },\n      candleColors: {\n        positive: \"#ffffff\",\n        negative: charcoal\n      }\n    },\n    baseProps\n  ),\n  chart: baseProps,\n  errorbar: assign(\n    {\n      borderWidth: 8,\n      style: {\n        data: {\n          fill: \"transparent\",\n          stroke: charcoal,\n          strokeWidth: 2\n        },\n        labels: centeredLabelStyles\n      }\n    },\n    baseProps\n  ),\n  group: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  legend: {\n    colorScale: colors,\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: baseLabelStyles,\n      title: assign({}, baseLabelStyles, { padding: 5 })\n    }\n  },\n  line: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          stroke: charcoal,\n          strokeWidth: 2\n        },\n        labels: centeredLabelStyles\n      }\n    },\n    baseProps\n  ),\n  pie: {\n    style: {\n      data: {\n        padding: 10,\n        stroke: \"transparent\",\n        strokeWidth: 1\n      },\n      labels: assign({}, baseLabelStyles, { padding: 20 })\n    },\n    colorScale: colors,\n    width: 400,\n    height: 400,\n    padding: 50\n  },\n  scatter: assign(\n    {\n      style: {\n        data: {\n          fill: charcoal,\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: centeredLabelStyles\n      }\n    },\n    baseProps\n  ),\n  stack: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  tooltip: {\n    style: assign({}, centeredLabelStyles, {\n      padding: 5,\n      pointerEvents: \"none\"\n    }),\n    flyoutStyle: {\n      stroke: charcoal,\n      strokeWidth: 1,\n      fill: \"#f0f0f0\",\n      pointerEvents: \"none\"\n    },\n    cornerRadius: 5,\n    pointerLength: 10\n  },\n  voronoi: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: assign({}, centeredLabelStyles, {\n          padding: 5,\n          pointerEvents: \"none\"\n        }),\n        flyout: {\n          stroke: charcoal,\n          strokeWidth: 1,\n          fill: \"#f0f0f0\",\n          pointerEvents: \"none\"\n        }\n      }\n    },\n    baseProps\n  )\n};"]},"metadata":{},"sourceType":"module"}