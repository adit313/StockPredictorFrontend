{"ast":null,"code":"var _jsxFileName = \"/Users/aditpatel/flatironcode/react/mod4Project/stockpredictor/src/Main.js\";\nimport React from 'react';\nimport * as V from 'victory';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\nexport default class Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{\n        quarter: 1,\n        earnings: 13000\n      }, {\n        quarter: 2,\n        earnings: 16500\n      }, {\n        quarter: 3,\n        earnings: 14250\n      }, {\n        quarter: 4,\n        earnings: 19000\n      }]\n    };\n\n    this.changeState = () => {\n      this.setState({\n        data: [{\n          quarter: 1,\n          earnings: 30000 * Math.random()\n        }, {\n          quarter: 2,\n          earnings: 30000 * Math.random()\n        }, {\n          quarter: 3,\n          earnings: 30000 * Math.random()\n        }, {\n          quarter: 4,\n          earnings: 30000 * Math.random()\n        }]\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Victory Tutorial\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.changeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Change\"), /*#__PURE__*/React.createElement(VictoryChart, {\n      animate: {\n        duration: 500\n      },\n      theme: VictoryTheme.material,\n      domainPadding: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n    // they are placed on the axis\n    , {\n      tickValues: [1, 2, 3, 4],\n      tickFormat: [\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(VictoryAxis, {\n      dependentAxis: true // tickFormat specifies how ticks should be displayed\n      ,\n      tickFormat: x => `$${x / 1000}k`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(VictoryBar, {\n      data: this.state.data,\n      x: \"quarter\",\n      y: \"earnings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/aditpatel/flatironcode/react/mod4Project/stockpredictor/src/Main.js"],"names":["React","V","VictoryBar","VictoryChart","VictoryAxis","VictoryTheme","Main","Component","state","data","quarter","earnings","changeState","setState","Math","random","render","duration","material","x"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,CAAZ,MAAmB,SAAnB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,WAAnC,EAAgDC,YAAhD,QAAmE,SAAnE;AAIA,eAAe,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEhDC,KAFgD,GAE1C;AACJC,MAAAA,IAAI,EAAE,CACJ;AAACC,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OADI,EAEJ;AAACD,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAFI,EAGJ;AAACD,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAHI,EAIJ;AAACD,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAJI;AADF,KAF0C;;AAAA,SAWhDC,WAXgD,GAWlC,MAAM;AAClB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAE,CACnB;AAACC,UAAAA,OAAO,EAAE,CAAV;AAAaC,UAAAA,QAAQ,EAAE,QAAMG,IAAI,CAACC,MAAL;AAA7B,SADmB,EAEnB;AAACL,UAAAA,OAAO,EAAE,CAAV;AAAaC,UAAAA,QAAQ,EAAE,QAAMG,IAAI,CAACC,MAAL;AAA7B,SAFmB,EAGnB;AAACL,UAAAA,OAAO,EAAE,CAAV;AAAaC,UAAAA,QAAQ,EAAE,QAAMG,IAAI,CAACC,MAAL;AAA7B,SAHmB,EAInB;AAACL,UAAAA,OAAO,EAAE,CAAV;AAAaC,UAAAA,QAAQ,EAAE,QAAMG,IAAI,CAACC,MAAL;AAA7B,SAJmB;AAAP,OAAd;AAMD,KAlB+C;AAAA;;AAoBhDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKJ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,oBAAC,YAAD;AACA,MAAA,OAAO,EAAE;AAAEK,QAAAA,QAAQ,EAAE;AAAZ,OADT;AAEA,MAAA,KAAK,EAAEZ,YAAY,CAACa,QAFpB;AAGE,MAAA,aAAa,EAAG,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,WAAD,CACE;AACA;AAFF;AAGE,MAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHd;AAIE,MAAA,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B,EAAwC,WAAxC,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAUI,oBAAC,WAAD;AACE,MAAA,aAAa,MADf,CAEE;AAFF;AAGE,MAAA,UAAU,EAAGC,CAAD,IAAS,IAAGA,CAAC,GAAG,IAAK,GAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAeM,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,IADnB;AAEE,MAAA,CAAC,EAAE,SAFL;AAGE,MAAA,CAAC,EAAE,UAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfN,CAHF,CADF;AA0BD;;AA/C+C","sourcesContent":["import React from 'react';\nimport * as V from 'victory';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme }from 'victory';\n\n\n\nexport default class Main extends React.Component {\n\n  state={\n    data: [\n      {quarter: 1, earnings: 13000},\n      {quarter: 2, earnings: 16500},\n      {quarter: 3, earnings: 14250},\n      {quarter: 4, earnings: 19000}\n    ]\n  }  \n\n  changeState = () => {\n    this.setState({data: [\n      {quarter: 1, earnings: 30000*Math.random()},\n      {quarter: 2, earnings: 30000*Math.random()},\n      {quarter: 3, earnings: 30000*Math.random()},\n      {quarter: 4, earnings: 30000*Math.random()}\n    ]})\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Victory Tutorial</h1>\n        <button onClick={this.changeState}>Change</button>\n        <VictoryChart \n        animate={{ duration: 500}}\n        theme={VictoryTheme.material}\n          domainPadding= {20} >\n            <VictoryAxis\n              // tickValues specifies both the number of ticks and where\n              // they are placed on the axis\n              tickValues={[1, 2, 3, 4]}\n              tickFormat={[\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"]}\n            />\n            <VictoryAxis\n              dependentAxis\n              // tickFormat specifies how ticks should be displayed\n              tickFormat={(x) => (`$${x / 1000}k`)}\n            />\n              <VictoryBar \n                data={this.state.data} \n                x={\"quarter\"} \n                y={\"earnings\"}/>\n        </VictoryChart>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}